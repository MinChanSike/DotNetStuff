using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace PrimeCodeGenerator
{
    public class BruteForceMemoryIntensivePrimeEnumerator
    {
        readonly List<UInt32> knownPrimes = new List<UInt32>();
        UInt32 currentPrime;
        public BruteForceMemoryIntensivePrimeEnumerator()
        {
            currentPrime = 3;
            knownPrimes.Add(3);
        }
        public UInt32 NextNoOverflowCheck()
        {
            while (true)
            {
                currentPrime += 2;

                Boolean prime = true;
                for (int i = 0; i < knownPrimes.Count; i++)
                {
                    UInt32 knownPrime = knownPrimes[i];
                    if ((currentPrime % knownPrime) == 0)
                    {
                        prime = false;
                        break;
                    }
                }
                if (!prime) continue;

                knownPrimes.Add(currentPrime);
                return currentPrime;
            }
        }
    }

    class Program
    {
        static Int32 Main(string[] args)
        {
            if(args.Length != 3)
            {
                Console.WriteLine("Usage: PrimeCodeGenerator.exe <namespace> <class-name> <count>");
                return 1;
            }

            String @namespace = args[0];
            String className = args[1];
            UInt32 primeCount = UInt32.Parse(args[2]);
            
            Console.WriteLine("// This file was autogenerated using the PrimeCodeGenerate.exe on {0}", DateTime.Now);
            Console.WriteLine("using System;");
            Console.WriteLine();
            Console.WriteLine("namespace {0}", @namespace);
            Console.WriteLine("{");
            Console.WriteLine("    public static class {0}", className);
            Console.WriteLine("    {");
            Console.WriteLine("        public static readonly UInt32[] FirstPrimes = new UInt32[] {");
            Console.Write("            2,3,");
            BruteForceMemoryIntensivePrimeEnumerator primeEnumerator = new BruteForceMemoryIntensivePrimeEnumerator();
            for (UInt32 i = 2; i < primeCount; i++)
            {
                if (i % 8 == 7)
                {
                    Console.WriteLine();
                    Console.Write("            ");
                }
                Console.Write("{0},", primeEnumerator.NextNoOverflowCheck());
            }
            Console.WriteLine();
            Console.WriteLine("        };");
            Console.WriteLine("    }");
            Console.WriteLine("}");

            return 0;
        }
    }
}
